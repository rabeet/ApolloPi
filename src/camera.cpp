//////////////////////////////////////////////////////////////////////////////
// Model: apollo_pi.qm
// File:  ./src/camera.cpp
//
// This file has been generated automatically by QP Modeler (QM).
// DO NOT EDIT THIS FILE MANUALLY.
//
// Please visit www.state-machine.com/qm for more information.
//////////////////////////////////////////////////////////////////////////////
#include "qp_port.h"
#include "rover.h"

#include <iostream>

namespace ApolloPi {

// @(/2/2) ...................................................................
// @(/2/2/0) .................................................................
Camera::Camera() 
  : QHsm(Q_STATE_CAST(&Camera::initial))
{
}

// @(/2/2/1) .................................................................
// @(/2/2/1/0)
QP::QState Camera::initial(Camera * const me, QP::QEvt const * const e) {
    return Q_TRAN(&Camera::initialized);
}
// @(/2/2/1/1) ...............................................................
QP::QState Camera::initialized(Camera * const me, QP::QEvt const * const e) {
    QP::QState status;
    switch (e->sig) {
        // @(/2/2/1/1)
        case Q_ENTRY_SIG: {
            std::cout << "------Camera: initialized." << std::endl;
            status = Q_HANDLED();
            break;
        }
        default: {
            status = Q_SUPER(&QHsm::top);
            break;
        }
    }
    return status;
}


static Camera l_camera;
QP::QHsm * const HSM_Camera = &l_camera;

} /* namespace Rover */

